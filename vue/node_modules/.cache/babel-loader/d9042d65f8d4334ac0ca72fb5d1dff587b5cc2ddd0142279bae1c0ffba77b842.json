{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"@/utils/request\";\nexport default {\n  data() {\n    return {\n      carousel_1_1: [\n        // require('@/assets/imgs/lun-1.jpg'),\n        // require('@/assets/imgs/lun-2.jpg'),\n      ],\n      // carousel_1_2: require('@/assets/imgs/goods.jpg'),\n      activeName: '',\n      typeData: [],\n      goodsData: [],\n      tabPosition: 'right' // 商品种类标签页的位置\n    };\n  },\n  // 监听路由变化，并在目标路由路径为/front/index的时候重新加载页面\n  watch: {\n    $route(to, from) {\n      if (to.path === '/front/index') {\n        console.log(\"hahah\");\n        location.reload();\n      }\n    }\n  },\n  mounted() {\n    request.get(\"/type\").then(res => {\n      if (res.code === '0') {\n        this.typeData = res.data;\n        this.load(this.typeData[0].id);\n      } else {\n        this.$notify.error(res.msg);\n        if (res.code === '401') {\n          this.$router.push(\"/login\");\n        }\n      }\n    });\n    this.loadBanner();\n  },\n  // methods：本页面所有的点击事件或者其他函数定义区\n  methods: {\n    load(typeId) {\n      this.activeName = typeId + '';\n      request.get(\"/goods/type/\" + typeId).then(res => {\n        if (res.code === '0') {\n          this.goodsData = res.data;\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n    // 加载轮播图\n    loadBanner() {\n      request.get(\"/banner\").then(res => {\n        if (res.code === '0') {\n          this.carousel_1_1 = res.data; // 返回请求中的数据赋给轮播图数组\n          console.log(this.carousel_1_1);\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n    handleClick(tab) {\n      this.load(tab.name);\n    }\n  }\n};","map":{"version":3,"names":["request","data","carousel_1_1","activeName","typeData","goodsData","tabPosition","watch","$route","to","from","path","console","log","location","reload","mounted","get","then","res","code","load","id","$notify","error","msg","$router","push","loadBanner","methods","typeId","handleClick","tab","name"],"sources":["src/views/front/Goods.vue"],"sourcesContent":["<!-- 商城推荐系统/所有商品 -->\n<template>\n  <div class=\"main-content\">\n    <!-- <div class=\"main-line\" style=\"margin-top: 40px;padding: 40px 260px\">\n      <el-image :src=\"carousel_1_2\" style=\"width:100%;height: 400px\">\n        <div slot=\"placeholder\" class=\"image-slot\">\n          加载中<span class=\"dot\">...</span>\n        </div>\n      </el-image>\n    </div> -->\n\n    <!-- 上面是原来的轮播图组件，我这里换成了首页的轮播图 -->\n    <div class=\"main-line\" style=\"padding: 0px 20px\">\n\t\t\t<div class=\"main-line-1\">\n\t\t\t\t<div class=\"main-img\">\n          <!-- el-carousel创建轮播图 -->\n\t\t\t\t\t<el-carousel height=\"80vh\" :interval=\"2000\">\n            <!-- v-for遍历数组，点击图片的时候进行跳转将商品id作为查询参数传递给目标页面 -->\n\t\t\t\t\t\t<el-carousel-item v-for=\"(item,index) in carousel_1_1\" :key=\"index\">\n\t\t\t\t\t\t\t<img :src=\"item.img\" alt=\"\"  style=\"height: 800px\" @click=\"$router.push('/front/detail?id=' + item.goodsId)\">\n\t\t\t\t\t\t</el-carousel-item>\n\t\t\t\t\t</el-carousel>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n    <!-- 商品展示和种类选择 -->\n    <div class=\"main-line\" style=\"margin-top: 40px;padding: 20px 200px\">\n      <div class=\"main-line-1\">\n        <!-- el-tabs创建标签页组件，:tab-position=\"tabPosition\"设置了标签页的位置 -->\n        <!-- 点击后调用方法进行处理 -->\n        <el-tabs :tab-position=\"tabPosition\" v-model=\"activeName\" @tab-click=\"handleClick\" >\n          <!-- 遍历typeData数组 -->\n          <el-tab-pane v-for=\"item in typeData\" :label=\"item.name\" :name=\"item.id + ''\" :key=\"item.id\" >\n            <el-row >\n              <!-- :span=\"6\"是让每个el-col占据一行的四分之一宽度，确保每行显示4个商品 -->\n              <el-col :span=\"6\" v-for=\"obj in goodsData\" style=\"margin-bottom: 10px;\"  >\n                <el-card class=\"goods-card\" :body-style=\"{ padding: '0px' }\" style=\"height: 400px;width: 95%;margin: auto\" >\n                  <!-- 商品图片 -->\n                  <img :src=\"obj.img\" alt=\"\" style=\"width: 100%;height: 300px;\" class=\"image\" @click=\"$router.push('/front/detail?id=' + obj.id)\">\n                  <div style=\"padding: 14px; text-align: center\" @click=\"$router.push('/front/detail?id=' + obj.id)\">\n                    <!-- 图片标题 -->\n                    <div class=\"overflowShow\" style=\"font-weight: 550;font-size: 20px; color:#5b5a5a;letter-spacing: 1px;margin-bottom: 24px\">{{obj.name}}</div>\n                    <!-- 图片价格 -->\n                    <div class=\"bottom clearfix\">\n                      <span class=\"time\">￥{{obj.price}}</span>\n                    </div>\n                  </div>\n                </el-card>\n              </el-col>\n            </el-row>\n          </el-tab-pane>\n        </el-tabs>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\n\nexport default {\n  data() {\n    return {\n\t\t\tcarousel_1_1: [\n        // require('@/assets/imgs/lun-1.jpg'),\n        // require('@/assets/imgs/lun-2.jpg'),\n      ],\n      // carousel_1_2: require('@/assets/imgs/goods.jpg'),\n      activeName: '',\n      typeData: [],\n      goodsData: [],\n      tabPosition: 'right' // 商品种类标签页的位置\n    }\n  },\n\n  // 监听路由变化，并在目标路由路径为/front/index的时候重新加载页面\n  watch: {\n    $route(to, from) {\n      if(to.path === '/front/index') {\n        console.log(\"hahah\")\n        location.reload()\n      }\n    }\n  },\n  mounted() {\n    request.get(\"/type\").then(res => {\n      if (res.code === '0') {\n        this.typeData = res.data;\n        this.load(this.typeData[0].id)\n      } else {\n        this.$notify.error(res.msg)\n        if (res.code === '401') {\n          this.$router.push(\"/login\")\n        }\n      }\n    })\n    this.loadBanner()\n  },\n  // methods：本页面所有的点击事件或者其他函数定义区\n  methods: {\n    load(typeId) {\n      this.activeName = typeId + ''\n      request.get(\"/goods/type/\" + typeId).then(res => {\n        if (res.code === '0') {\n          this.goodsData = res.data\n        } else {\n          this.$notify.error(res.msg)\n        }\n      })\n    },\n\n    // 加载轮播图\n    loadBanner() {\n      request.get(\"/banner\").then(res => {\n        if (res.code === '0'){\n          this.carousel_1_1 = res.data; // 返回请求中的数据赋给轮播图数组\n          console.log(this.carousel_1_1)\n        } else {\n          this.$notify.error(res.msg);\n        }\n      })\n    },\n\n    handleClick(tab) {\n      this.load(tab.name)\n    },\n  }\n}\n</script>\n\n<style scoped>\n/* 添加热销商品卡片的鼠标悬停样式 */\n.goods-card:hover {\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* 添加阴影效果 */\n  transform: translateY(-5px); /* 稍微向上移动 */\n  transition: all 0.3s ease; /* 添加过渡效果 */\n}\n</style>\n"],"mappings":";AA2DA,OAAAA,OAAA;AAEA;EACAC,KAAA;IACA;MACAC,YAAA;QACA;QACA;MAAA,CACA;MACA;MACAC,UAAA;MACAC,QAAA;MACAC,SAAA;MACAC,WAAA;IACA;EACA;EAEA;EACAC,KAAA;IACAC,OAAAC,EAAA,EAAAC,IAAA;MACA,IAAAD,EAAA,CAAAE,IAAA;QACAC,OAAA,CAAAC,GAAA;QACAC,QAAA,CAAAC,MAAA;MACA;IACA;EACA;EACAC,QAAA;IACAhB,OAAA,CAAAiB,GAAA,UAAAC,IAAA,CAAAC,GAAA;MACA,IAAAA,GAAA,CAAAC,IAAA;QACA,KAAAhB,QAAA,GAAAe,GAAA,CAAAlB,IAAA;QACA,KAAAoB,IAAA,MAAAjB,QAAA,IAAAkB,EAAA;MACA;QACA,KAAAC,OAAA,CAAAC,KAAA,CAAAL,GAAA,CAAAM,GAAA;QACA,IAAAN,GAAA,CAAAC,IAAA;UACA,KAAAM,OAAA,CAAAC,IAAA;QACA;MACA;IACA;IACA,KAAAC,UAAA;EACA;EACA;EACAC,OAAA;IACAR,KAAAS,MAAA;MACA,KAAA3B,UAAA,GAAA2B,MAAA;MACA9B,OAAA,CAAAiB,GAAA,kBAAAa,MAAA,EAAAZ,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAf,SAAA,GAAAc,GAAA,CAAAlB,IAAA;QACA;UACA,KAAAsB,OAAA,CAAAC,KAAA,CAAAL,GAAA,CAAAM,GAAA;QACA;MACA;IACA;IAEA;IACAG,WAAA;MACA5B,OAAA,CAAAiB,GAAA,YAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAlB,YAAA,GAAAiB,GAAA,CAAAlB,IAAA;UACAW,OAAA,CAAAC,GAAA,MAAAX,YAAA;QACA;UACA,KAAAqB,OAAA,CAAAC,KAAA,CAAAL,GAAA,CAAAM,GAAA;QACA;MACA;IACA;IAEAM,YAAAC,GAAA;MACA,KAAAX,IAAA,CAAAW,GAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}